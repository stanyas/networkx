import numpy as np
import matplotlib.pyplot as plt
import networkx as nx

G = nx.Graph()

G.add_nodes_from(
    [
        ("Approximations and Heuristics"),
        ("Connectivity"),
        ("K-components"),
        ("Clique"),
        ("Clustering"),
        ("Distance Measures"),
        ("Dominating Set"),
        ("Matching"),
        ("Ramsey"),
        ("Steiner Tree"),
        ("Traveling Salesman"),
        ("Treewidth"),
        ("Vertex Cover"),
        ("Max Cut"),
        ("Assortativity - topic"),
        ("Assortativity"),
        ("Average neighbor degree"),
        ("Average degree connectivity"),
        ("Mixing"),
        ("Pairs"),
        ("Asteroidal"),
        ("is_at_free"),
        ("find_asteroidal_triple"),
        ("Bipartite"),
        ("Basic functions"),
        ("Edgelist"),
        ("Matching"),
        ("Matrix"),
        ("Projections"),
        ("Spectral"),
        ("Clustering"),
        ("Redundancy"),
        ("Centrality"),
        ("Generators"),
        ("Covering"),
        ("Boundary"),
        ("edge_boundary"),
        ("node_boundary"),
        ("Bridges"),
        ("bridges"),
        ("has_bridges"),
        ("local_bridges"),
        ("Centrality"),
        ("Degree"),
        ("Eigenvector"),
        ("Closeness"),
        ("Current Flow Closeness"),
        ("(Shortest Path) Betweenness"),
        ("Current Flow Betweenness"),
        ("Communicability Betweenness"),
        ("Group Centrality"),
        ("Load"),
        ("Subgraph"),
        ("Harmonic Centrality"),
        ("Dispersion"),
        ("Reaching"),
        ("Percolation"),
        ("Second Order Centrality"),
        ("Trophic"),
        ("VoteRank"),
        ("Chains"),
        ("chain_decomposition"),
        ("Chordal"),
        ("is_chordal"),
        ("chordal_graph_cliques"),
        ("chordal_graph_treewidth"),
        ("complete_to_chordal_graph"),
        ("find_induced_nodes"),
        ("Clique"),
        ("enumerate_all_cliques"),
        ("find_cliques"),
        ("find_cliques_recursive"),
        ("make_max_clique_graph"),
        ("make_clique_bipartite"),
        ("graph_clique_number"),
        ("graph_number_of_cliques"),
        ("node_clique_number"),
        ("number_of_cliques"),
        ("cliques_containing_node"),
        ("max_weight_clique"),
        ("Clustering"),
        ("triangles"),
        ("transitivity"),
        ("clustering"),
        ("average_clustering"),
        ("square_clustering"),
        ("generalized_degree"),
        ("Coloring"),
        ("greedy_color"),
        ("equitable_color"),
        ("strategy_connected_sequential"),
        ("strategy_connected_sequential_dfs"),
        ("strategy_connected_sequential_bfs"),
        ("strategy_independent_set"),
        ("strategy_largest_first"),
        ("strategy_random_sequential"),
        ("strategy_saturation_largest_first"),
        ("strategy_smallest_last"),
        ("Communicability"),
        ("communicability"),
        ("communicability_exp"),
        ("Communities"),
        ("Bipartitions"),
        ("K-Clique"),
        ("Modularity-based communities"),
        ("Tree partitioning"),
        ("Label propagation"),
        ("Louvain Community Detection"),
        ("Fluid Communities"),
        ("Measuring partitions"),
        ("Partitions via centrality measures"),
        ("Validating partitions"),
        ("Components"),
        ("Connectivity"),
        ("Strong connectivity"),
        ("Weak connectivity"),
        ("Attracting components"),
        ("Biconnected components"),
        ("Semiconnectedness"),
        ("Connectivity"),
        ("Edge-augmentation"),
        ("K-edge-components"),
        ("K-node-components"),
        ("K-node-cutsets"),
        ("Flow-based disjoint paths"),
        ("Flow-based Connectivity"),
        ("Flow-based Minimum Cuts"),
        ("Stoer-Wagner minimum cut"),
        ("Utils for flow-based connectivity"),
        ("Cores"),
        ("core_number"),
        ("k_core"),
        ("k_shell"),
        ("k_crust"),
        ("k_corona"),
        ("k_truss"),
        ("onion_layers"),
        ("Covering"),
        ("min_edge_cover"),
        ("is_edge_cover"),
        ("Cycles"),
        ("cycle_basis"),
        ("simple_cycles"),
        ("recursive_simple_cycles"),
        ("find_cycle"),
        ("minimum_cycle_basis"),
        ("Cuts"),
        ("boundary_expansion"),
        ("conductance"),
        ("cut_size"),
        ("edge_expansion"),
        ("mixing_expansion"),
        ("node_expansion"),
        ("normalized_cut_size"),
        ("volume"),
        ("D-Separation"),
        ("Examples"),
        ("References"),
        ("d_separated"),
        ("Directed Acyclic Graphs"),
        ("ancestors"),
        ("descendants"),
        ("topological_sort"),
        ("topological_generations"),
        ("all_topological_sorts"),
        ("lexicographical_topological_sort"),
        ("is_directed_acyclic_graph"),
        ("is_aperiodic"),
        ("transitive_closure"),
        ("transitive_closure_dag"),
        ("transitive_reduction"),
        ("antichains"),
        ("dag_longest_path"),
        ("dag_longest_path_length"),
        ("dag_to_branching"),
        ("Distance Measures"),
        ("barycenter"),
        ("center"),
        ("diameter"),
        ("eccentricity"),
        ("extrema_bounding"),
        ("periphery"),
        ("radius"),
        ("resistance_distance"),
        ("Distance-Regular Graphs"),
        ("is_distance_regular"),
        ("is_strongly_regular"),
        ("intersection_array"),
        ("global_parameters"),
        ("Dominance"),
        ("immediate_dominators"),
        ("dominance_frontiers"),
        ("Dominating Sets"),
        ("dominating_set"),
        ("is_dominating_set"),
        ("Efficiency"),
        ("efficiency"),
        ("local_efficiency"),
        ("global_efficiency"),
        ("Eulerian"),
        ("is_eulerian"),
        ("eulerian_circuit"),
        ("eulerize"),
        ("is_semieulerian"),
        ("has_eulerian_path"),
        ("eulerian_path"),
        ("Flows"),
        ("Maximum Flow"),
        ("Edmonds-Karp"),
        ("Shortest Augmenting Path"),
        ("Preflow-Push"),
        ("Dinitz"),
        ("Boykov-Kolmogorov"),
        ("Gomory-Hu Tree"),
        ("Utils"),
        ("Network Simplex"),
        ("Capacity Scaling Minimum Cost Flow"),
        ("Graph Hashing"),
        ("weisfeiler_lehman_graph_hash"),
        ("weisfeiler_lehman_subgraph_hashes"),
        ("Graphical degree sequence"),
        ("is_graphical"),
        ("is_digraphical"),
        ("is_multigraphical"),
        ("is_pseudographical"),
        ("is_valid_degree_sequence_havel_hakimi"),
        ("is_valid_degree_sequence_erdos_gallai"),
        ("Hierarchy"),
        ("flow_hierarchy"),
        ("Hybrid"),
        ("kl_connected_subgraph"),
        ("is_kl_connected"),
        ("Isolates"),
        ("is_isolate"),
        ("isolates"),
        ("number_of_isolates"),
        ("Isomorphism"),
        ("is_isomorphic"),
        ("could_be_isomorphic"),
        ("fast_could_be_isomorphic"),
        ("faster_could_be_isomorphic"),
        ("Tree Isomorphism"),
        ("Advanced Interfaces"),
        ("Link Analysis"),
        ("PageRank"),
        ("Hits"),
        ("Link Prediction"),
        ("resource_allocation_index"),
        ("jaccard_coefficient"),
        ("adamic_adar_index"),
        ("preferential_attachment"),
        ("cn_soundarajan_hopcroft"),
        ("ra_index_soundarajan_hopcroft"),
        ("within_inter_cluster"),
        ("common_neighbor_centrality"),
        ("Lowest Common Ancestor"),
        ("all_pairs_lowest_common_ancestor"),
        ("tree_all_pairs_lowest_common_ancestor"),
        ("lowest_common_ancestor"),
        ("Matching"),
        ("is_matching"),
        ("is_maximal_matching"),
        ("is_perfect_matching"),
        ("maximal_matching"),
        ("max_weight_matching"),
        ("min_weight_matching"),
        ("Minors"),
        ("References"),
        ("contracted_edge"),
        ("contracted_nodes"),
        ("identified_nodes"),
        ("equivalence_classes"),
        ("quotient_graph"),
        ("Maximal independent set"),
        ("maximal_independent_set"),
        ("non-randomness"),
        ("non_randomness"),
        ("Moral"),
        ("moral_graph"),
        ("Node Classification"),
        ("Harmonic Function"),
        ("Local and Global Consistency"),
        ("Operators"),
        ("complement"),
        ("reverse"),
        ("compose"),
        ("union"),
        ("disjoint_union"),
        ("intersection"),
        ("difference"),
        ("symmetric_difference"),
        ("full_join"),
        ("compose_all"),
        ("union_all"),
        ("disjoint_union_all"),
        ("intersection_all"),
        ("cartesian_product"),
        ("lexicographic_product"),
        ("rooted_product"),
        ("strong_product"),
        ("tensor_product"),
        ("power"),
        ("Planarity"),
        ("check_planarity"),
        ("Planar Drawing"),
        ("combinatorial_embedding_to_pos"),
        ("Reciprocity"),
        ("reciprocity"),
        ("overall_reciprocity"),
        ("Regular"),
        ("is_regular"),
        ("is_k_regular"),
        ("k_factor"),
        ("Rich Club"),
        ("rich_club_coefficient"),
        ("Shortest Paths"),
        ("shortest_path"),
        ("all_shortest_paths"),
        ("shortest_path_length"),
        ("average_shortest_path_length"),
        ("has_path"),
        ("Advanced Interface"),
        ("Dense Graphs"),
        ("A* Algorithm"),
        ("Similarity Measures"),
        ("graph_edit_distance"),
        ("optimal_edit_paths"),
        ("optimize_graph_edit_distance"),
        ("optimize_edit_paths"),
        ("simrank_similarity"),
        ("simrank_similarity_numpy"),
        ("panther_similarity"),
        ("generate_random_paths"),
        ("Simple Paths"),
        ("all_simple_paths"),
        ("all_simple_edge_paths"),
        ("is_simple_path"),
        ("shortest_simple_paths"),
        ("Small-world"),
        ("random_reference"),
        ("lattice_reference"),
        ("sigma"),
        ("omega"),
        ("s metric"),
        ("s_metric"),
        ("Sparsifiers"),
        ("spanner"),
        ("Structural holes"),
        ("constraint"),
        ("effective_size"),
        ("local_constraint"),
        ("Summarization"),
        ("dedensify"),
        ("snap_aggregation"),
        ("Swap"),
        ("double_edge_swap"),
        ("connected_double_edge_swap"),
        ("Threshold Graphs"),
        ("find_threshold_graph"),
        ("is_threshold_graph"),
        ("Tournament"),
        ("hamiltonian_path"),
        ("is_reachable"),
        ("is_strongly_connected"),
        ("is_tournament"),
        ("random_tournament"),
        ("score_sequence"),
        ("Traversal"),
        ("Depth First Search"),
        ("Breadth First Search"),
        ("Beam search"),
        ("Depth First Search on Edges"),
        ("Breadth First Search on Edges"),
        ("Tree"),
        ("Recognition"),
        ("Branchings and Spanning Arborescences"),
        ("Encoding and decoding"),
        ("Operations"),
        ("Spanning Trees"),
        ("Decomposition"),
        ("Exceptions"),
        ("Triads"),
        ("triadic_census"),
        ("random_triad"),
        ("triads_by_type"),
        ("triad_type"),
        ("is_triad"),
        ("all_triads"),
        ("all_triplets"),
        ("Vitality"),
        ("closeness_vitality"),
        ("Voronoi cells"),
        ("voronoi_cells"),
        ("Wiener index"),
        ("wiener_index"),
    ]
)

G.add_edges_from(
    [
        ("Approximations and Heuristics", "Connectivity"),
        ("Approximations and Heuristics", "K-components"),
        ("Approximations and Heuristics", "Clique"),
        ("Approximations and Heuristics", "Clustering"),
        ("Approximations and Heuristics", "Distance Measures"),
        ("Approximations and Heuristics", "Dominating Set"),
        ("Approximations and Heuristics", "Matching"),
        ("Approximations and Heuristics", "Ramsey"),
        ("Approximations and Heuristics", "Steiner Tree"),
        ("Approximations and Heuristics", "Traveling Salesman"),
        ("Approximations and Heuristics", "Treewidth"),
        ("Approximations and Heuristics", "Vertex Cover"),
        ("Approximations and Heuristics", "Max Cut"),
        ("Assortativity-topic", "Assortativity"),
        ("Assortativity-topic", "Average neighbor degree"),
        ("Assortativity-topic", "Average degree connectivity"),
        ("Assortativity-topic", "Mixing"),
        ("Assortativity-topic", "Pairs"),
        ("Asteroidal", "is_at_free"),
        ("Asteroidal", "find_asteroidal_triple"),
        ("Bipartite", "Basic functions"),
        ("Bipartite", "Edgelist"),
        ("Bipartite", "Matching"),
        ("Bipartite", "Matrix"),
        ("Bipartite", "Projections"),
        ("Bipartite", "Spectral"),
        ("Bipartite", "Clustering"),
        ("Bipartite", "Redundancy"),
        ("Bipartite", "Centrality"),
        ("Bipartite", "Generators"),
        ("Bipartite", "Covering"),
        ("Boundary", "edge_boundary"),
        ("Boundary", "node_boundary"),
        ("Boundary", "Bridges"),
        ("bridges", "has_bridges"),
        ("bridges", "local_bridges"),
        ("Centrality", "Degree"),
        ("Centrality", "Eigenvector"),
        ("Centrality", "Closeness"),
        ("Centrality", "Current Flow Closeness"),
        ("Centrality", "(Shortest Path) Betweenness"),
        ("Centrality", "Current Flow Betweenness"),
        ("Centrality", "Communicability Betweenness"),
        ("Centrality", "Group Centrality"),
        ("Centrality", "Load"),
        ("Centrality", "Subgraph"),
        ("Centrality", "Harmonic Centrality"),
        ("Centrality", "Dispersion"),
        ("Centrality", "Reaching"),
        ("Centrality", "Percolation"),
        ("Centrality", "Second Order Centrality"),
        ("Centrality", "Trophic"),
        ("Centrality", "VoteRank"),
        ("Chains", "chain_decomposition"),
        ("Chordal", "is_chordal"),
        ("Chordal", "chordal_graph_cliques"),
        ("Chordal", "chordal_graph_treewidth"),
        ("Chordal", "complete_to_chordal_graph"),
        ("Chordal", "find_induced_nodes"),
        ("Clique", "enumerate_all_cliques"),
        ("Clique", "find_cliques"),
        ("Clique", "find_cliques_recursive"),
        ("Clique", "make_max_clique_graph"),
        ("Clique", "make_clique_bipartite"),
        ("Clique", "graph_clique_number"),
        ("Clique", "graph_number_of_cliques"),
        ("Clique", "node_clique_number"),
        ("Clique", "number_of_cliques"),
        ("Clique", "cliques_containing_node"),
        ("Clique", "max_weight_clique"),
        ("Clustering", "triangles"),
        ("Clustering", "transitivity"),
        ("Clustering", "clustering"),
        ("Clustering", "average_clustering"),
        ("Clustering", "square_clustering"),
        ("Clustering", "generalized_degree"),
        ("Coloring", "greedy_color"),
        ("Coloring", "equitable_color"),
        ("Coloring", "strategy_connected_sequential"),
        ("Coloring", "strategy_connected_sequential_dfs"),
        ("Coloring", "strategy_connected_sequential_bfs"),
        ("Coloring", "strategy_independent_set"),
        ("Coloring", "strategy_largest_first"),
        ("Coloring", "strategy_random_sequential"),
        ("Coloring", "strategy_saturation_largest_first"),
        ("Coloring", "strategy_smallest_last"),
        ("Communicability", "communicability"),
        ("Communicability", "communicability_exp"),
        ("Communities", "Bipartitions"),
        ("Communities", "K-Clique"),
        ("Communities", "Modularity-based communities"),
        ("Communities", "Tree partitioning"),
        ("Communities", "Label propagation"),
        ("Communities", "Louvain Community Detection"),
        ("Communities", "Fluid Communities"),
        ("Communities", "Measuring partitions"),
        ("Communities", "Partitions via centrality measures"),
        ("Communities", "Validating partitions"),
        ("Components", "Connectivity"),
        ("Components", "Strong connectivity"),
        ("Components", "Weak connectivity"),
        ("Components", "Attracting components"),
        ("Components", "Biconnected components"),
        ("Components", "Semiconnectedness"),
        ("Connectivity", "Edge-augmentation"),
        ("Connectivity", "K-edge-components"),
        ("Connectivity", "K-node-components"),
        ("Connectivity", "K-node-cutsets"),
        ("Connectivity", "Flow-based disjoint paths"),
        ("Connectivity", "Flow-based Connectivity"),
        ("Connectivity", "Flow-based Minimum Cuts"),
        ("Connectivity", "Stoer-Wagner minimum cut"),
        ("Connectivity", "Utils for flow-based connectivity"),
        ("Cores", "core_number"),
        ("Cores", "k_core"),
        ("Cores", "k_shell"),
        ("Cores", "k_crust"),
        ("Cores", "k_corona"),
        ("Cores", "k_truss"),
        ("Cores", "onion_layers"),
        ("Covering", "min_edge_cover"),
        ("Covering", "is_edge_cover"),
        ("Cycles", "cycle_basis"),
        ("Cycles", "simple_cycles"),
        ("Cycles", "recursive_simple_cycles"),
        ("Cycles", "find_cycle"),
        ("Cycles", "minimum_cycle_basis"),
        ("Cuts", "boundary_expansion"),
        ("Cuts", "conductance"),
        ("Cuts", "cut_size"),
        ("Cuts", "edge_expansion"),
        ("Cuts", "mixing_expansion"),
        ("Cuts", "node_expansion"),
        ("Cuts", "normalized_cut_size"),
        ("Cuts", "volume"),
        ("D-Separation", "Examples"),
        ("D-Separation", "References"),
        ("D-Separation", "d_separated"),
        ("Directed Acyclic Graphs", "ancestors"),
        ("Directed Acyclic Graphs", "descendants"),
        ("Directed Acyclic Graphs", "topological_sort"),
        ("Directed Acyclic Graphs", "topological_generations"),
        ("Directed Acyclic Graphs", "all_topological_sorts"),
        ("Directed Acyclic Graphs", "lexicographical_topological_sort"),
        ("Directed Acyclic Graphs", "is_directed_acyclic_graph"),
        ("Directed Acyclic Graphs", "is_aperiodic"),
        ("Directed Acyclic Graphs", "transitive_closure"),
        ("Directed Acyclic Graphs", "transitive_closure_dag"),
        ("Directed Acyclic Graphs", "transitive_reduction"),
        ("Directed Acyclic Graphs", "antichains"),
        ("Directed Acyclic Graphs", "dag_longest_path"),
        ("Directed Acyclic Graphs", "dag_longest_path_length"),
        ("Directed Acyclic Graphs", "dag_to_branching"),
        ("Distance Measures", "barycenter"),
        ("Distance Measures", "center"),
        ("Distance Measures", "diameter"),
        ("Distance Measures", "eccentricity"),
        ("Distance Measures", "extrema_bounding"),
        ("Distance Measures", "periphery"),
        ("Distance Measures", "radius"),
        ("Distance Measures", "resistance_distance"),
        ("Distance-Regular Graphs", "is_distance_regular"),
        ("Distance-Regular Graphs", "is_strongly_regular"),
        ("Distance-Regular Graphs", "intersection_array"),
        ("Distance-Regular Graphs", "global_parameters"),
        ("Dominance", "immediate_dominators"),
        ("Dominance", "dominance_frontiers"),
        ("Dominating Sets", "dominating_set"),
        ("Dominating Sets", "is_dominating_set"),
        ("Efficiency", "efficiency"),
        ("Efficiency", "local_efficiency"),
        ("Efficiency", "global_efficiency"),
        ("Eulerian", "is_eulerian"),
        ("Eulerian", "eulerian_circuit"),
        ("Eulerian", "eulerize"),
        ("Eulerian", "is_semieulerian"),
        ("Eulerian", "has_eulerian_path"),
        ("Eulerian", "eulerian_path"),
        ("Flows", "Maximum Flow"),
        ("Flows", "Edmonds-Karp"),
        ("Flows", "Shortest Augmenting Path"),
        ("Flows", "Preflow-Push"),
        ("Flows", "Dinitz"),
        ("Flows", "Boykov-Kolmogorov"),
        ("Flows", "Gomory-Hu Tree"),
        ("Flows", "Utils"),
        ("Flows", "Network Simplex"),
        ("Flows", "Capacity Scaling Minimum Cost Flow"),
        ("Graph Hashing", "weisfeiler_lehman_graph_hash"),
        ("Graph Hashing", "weisfeiler_lehman_subgraph_hashes"),
        ("Graphical degree sequence", "is_graphical"),
        ("Graphical degree sequence", "is_digraphical"),
        ("Graphical degree sequence", "is_multigraphical"),
        ("Graphical degree sequence", "is_pseudographical"),
        ("Graphical degree sequence", "is_valid_degree_sequence_havel_hakimi"),
        ("Graphical degree sequence", "is_valid_degree_sequence_erdos_gallai"),
        ("Hierarchy", "flow_hierarchy"),
        ("Hybrid", "kl_connected_subgraph"),
        ("Hybrid", "is_kl_connected"),
        ("Isolates", "is_isolate"),
        ("Isolates", "isolates"),
        ("Isolates", "number_of_isolates"),
        ("Isomorphism", "is_isomorphic"),
        ("Isomorphism", "could_be_isomorphic"),
        ("Isomorphism", "fast_could_be_isomorphic"),
        ("Isomorphism", "faster_could_be_isomorphic"),
        ("Isomorphism", "Tree Isomorphism"),
        ("Isomorphism", "Advanced Interfaces"),
        ("Link Analysis", "PageRank"),
        ("Link Analysis", "Hits"),
        ("Link Prediction", "resource_allocation_index"),
        ("Link Prediction", "jaccard_coefficient"),
        ("Link Prediction", "adamic_adar_index"),
        ("Link Prediction", "preferential_attachment"),
        ("Link Prediction", "cn_soundarajan_hopcroft"),
        ("Link Prediction", "ra_index_soundarajan_hopcroft"),
        ("Link Prediction", "within_inter_cluster"),
        ("Link Prediction", "common_neighbor_centrality"),
        ("Lowest Common Ancestor", "all_pairs_lowest_common_ancestor"),
        ("Lowest Common Ancestor", "tree_all_pairs_lowest_common_ancestor"),
        ("Lowest Common Ancestor", "lowest_common_ancestor"),
        ("Matching", "is_matching"),
        ("Matching", "is_maximal_matching"),
        ("Matching", "is_perfect_matching"),
        ("Matching", "maximal_matching"),
        ("Matching", "max_weight_matching"),
        ("Matching", "min_weight_matching"),
        ("Minors", "References"),
        ("Minors", "contracted_edge"),
        ("Minors", "contracted_nodes"),
        ("Minors", "identified_nodes"),
        ("Minors", "equivalence_classes"),
        ("Minors", "quotient_graph"),
        ("Maximal independent set", "maximal_independent_set"),
        ("non-randomness", "non_randomness"),
        ("Moral", "moral_graph"),
        ("Node Classification", "Harmonic Function"),
        ("Node Classification", "Local and Global Consistency"),
        ("Operators", "complement"),
        ("Operators", "reverse"),
        ("Operators", "compose"),
        ("Operators", "union"),
        ("Operators", "disjoint_union"),
        ("Operators", "intersection"),
        ("Operators", "difference"),
        ("Operators", "symmetric_difference"),
        ("Operators", "full_join"),
        ("Operators", "compose_all"),
        ("Operators", "union_all"),
        ("Operators", "disjoint_union_all"),
        ("Operators", "intersection_all"),
        ("Operators", "cartesian_product"),
        ("Operators", "lexicographic_product"),
        ("Operators", "rooted_product"),
        ("Operators", "strong_product"),
        ("Operators", "tensor_product"),
        ("Operators", "power"),
        ("Planarity", "check_planarity"),
        ("Planar Drawing", "combinatorial_embedding_to_pos"),
        ("Reciprocity", "reciprocity"),
        ("Reciprocity", "overall_reciprocity"),
        ("Regular", "is_regular"),
        ("Regular", "is_k_regular"),
        ("Regular", "k_factor"),
        ("Rich Club", "rich_club_coefficient"),
        ("Shortest Paths", "shortest_path"),
        ("Shortest Paths", "all_shortest_paths"),
        ("Shortest Paths", "shortest_path_length"),
        ("Shortest Paths", "average_shortest_path_length"),
        ("Shortest Paths", "has_path"),
        ("Shortest Paths", "Advanced Interface"),
        ("Shortest Paths", "Dense Graphs"),
        ("Shortest Paths", "A* Algorithm"),
        ("Similarity Measures", "graph_edit_distance"),
        ("Similarity Measures", "optimal_edit_paths"),
        ("Similarity Measures", "optimize_graph_edit_distance"),
        ("Similarity Measures", "optimize_edit_paths"),
        ("Similarity Measures", "simrank_similarity"),
        ("Similarity Measures", "simrank_similarity_numpy"),
        ("Similarity Measures", "panther_similarity"),
        ("Similarity Measures", "generate_random_paths"),
        ("Simple Paths", "all_simple_paths"),
        ("Simple Paths", "all_simple_edge_paths"),
        ("Simple Paths", "is_simple_path"),
        ("Simple Paths", "shortest_simple_paths"),
        ("Small-world", "random_reference"),
        ("Small-world", "lattice_reference"),
        ("Small-world", "sigma"),
        ("Small-world", "omega"),
        ("s metric", "s_metric"),
        ("Sparsifiers", "spanner"),
        ("Structural holes", "constraint"),
        ("Structural holes", "effective_size"),
        ("Structural holes", "local_constraint"),
        ("Summarization", "dedensify"),
        ("Summarization", "snap_aggregation"),
        ("Swap", "double_edge_swap"),
        ("Swap", "connected_double_edge_swap"),
        ("Threshold Graphs", "find_threshold_graph"),
        ("Threshold Graphs", "is_threshold_graph"),
        ("Tournament", "hamiltonian_path"),
        ("Tournament", "is_reachable"),
        ("Tournament", "is_strongly_connected"),
        ("Tournament", "is_tournament"),
        ("Tournament", "random_tournament"),
        ("Tournament", "score_sequence"),
        ("Traversal", "Depth First Search"),
        ("Traversal", "Breadth First Search"),
        ("Traversal", "Beam search"),
        ("Traversal", "Depth First Search on Edges"),
        ("Traversal", "Breadth First Search on Edges"),
        ("Tree", "Recognition"),
        ("Tree", "Branchings and Spanning Arborescences"),
        ("Tree", "Encoding and decoding"),
        ("Tree", "Operations"),
        ("Tree", "Spanning Trees"),
        ("Tree", "Decomposition"),
        ("Tree", "Exceptions"),
        ("Triads", "triadic_census"),
        ("Triads", "random_triad"),
        ("Triads", "triads_by_type"),
        ("Triads", "triad_type"),
        ("Triads", "is_triad"),
        ("Triads", "all_triads"),
        ("Triads", "all_triplets"),
        ("Vitality", "closeness_vitality"),
        ("Voronoi cells", "voronoi_cells"),
        ("Wiener index", "wiener_index"),
    ]
)

nx.draw(
    G,
    with_labels=True,
    node_size=5,
    font_size=7,
    edge_color="red",
    node_color="tab:red",
)
plt.show()
